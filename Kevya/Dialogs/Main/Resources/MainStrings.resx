<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CANCELLED" xml:space="preserve">
    <value>Ok, let's start again. How can I help you today?</value>
  </data>
  <data name="COMPLETED" xml:space="preserve">
    <value>Thank you for contacting Kevya</value>
  </data>
  <data name="CONFUSED" xml:space="preserve">
    <value>Could you please try to rephrase the question? Using different words can sometimes help.</value>
  </data>
  <data name="ERROR" xml:space="preserve">
    <value>Sorry, it looks like something went wrong.</value>
  </data>
  <data name="GREETING" xml:space="preserve">
    <value>{"messages":
	[
		{"message":"Hello {username}! I am Kevya Virtual Assistant. Ask me any question related to following services and I will be happy to assist you"},
{"message":"Hello {username}! and thanks for trying this experience! I am a Virtual Assistant, always eager to learn new ways to support you better.
You can always type 'help' in the chat window to visualize a summary of my current capabilities. You can cancel a process/conversation at any time by typing 'Cancel' or 'Exit'.
So, how can I help you today? "},
{"message":"Hello {username}! I'm your new Virtual Assistant. I can help you with multiple tasks related to tickets, issue resolution."},
{"message":"Hey {username}! Greetings from NTT. I can assist you for various tasks such as creating new tickets, solving issues. Try me!"},
{"message":"Hello {username}! I'm an Intelligent Assistant. Let's get started, I am happy to help you with multiple tasks such as tickets, issue resolution"},
{"message":"Hi {username}, welcome to NTT! I'm your Virtual Friend. Let me help you get started. Bring your inquiries related to tickets or issues you are stuck with to me. How may I help?"}]}</value>
  </data>
  <data name="GREETING_WITH_NAME" xml:space="preserve">
    <value>Hey!</value>
  </data>
  <data name="HELP_TEXT" xml:space="preserve">
    <value>• I am a Virtual Assistant and I am continuously in training to enhance my skills.
Currently I can help you by answering inquiries related to IT Internal Policies, providing support for Frequently Asked IT Questions, Opening and Providing Status Updates for Request and Incident Tickets.
• 
You can ask me questions such as 'Can I get a status update on an open ticket?' or 'What is the desktop replacement policy' and even ask me to help you with desktop issues by saying 'My computer is slow'.
 
• You can always cancel or exit any process or conversation by typing 'Cancel' or 'Exit' in the chat window.</value>
  </data>
  <data name="HELP_TITLE" xml:space="preserve">
    <value>Kevya Virtual Assistant Help</value>
  </data>
  <data name="INTRO_TEXT" xml:space="preserve">
    <value>I am Kevya, a Virtual Assistant. I can help you with Ticket Creation, Ticket Status, IT Policy Documents, KB Articles and announcements. You can ask me things like 'Help me with my ticket status', 'How to add people or group to outlook etc.' You can cancel or exit any flow by typing  'Cancel' or 'Exit' command.</value>
  </data>
</root>